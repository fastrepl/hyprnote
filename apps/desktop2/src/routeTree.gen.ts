/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as AppRouteImport } from './routes/app'
import { Route as AppChatRouteImport } from './routes/app/chat'
import { Route as AppAuthRouteImport } from './routes/app/auth'
import { Route as AppSettingsLayoutRouteImport } from './routes/app/settings/_layout'
import { Route as AppMainLayoutRouteImport } from './routes/app/main/_layout'
import { Route as AppSettingsLayoutIndexRouteImport } from './routes/app/settings/_layout.index'
import { Route as AppMainLayoutIndexRouteImport } from './routes/app/main/_layout.index'

const AppSettingsRouteImport = createFileRoute('/app/settings')()
const AppMainRouteImport = createFileRoute('/app/main')()

const AppRoute = AppRouteImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRouteImport,
} as any)
const AppSettingsRoute = AppSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AppRoute,
} as any)
const AppMainRoute = AppMainRouteImport.update({
  id: '/main',
  path: '/main',
  getParentRoute: () => AppRoute,
} as any)
const AppChatRoute = AppChatRouteImport.update({
  id: '/chat',
  path: '/chat',
  getParentRoute: () => AppRoute,
} as any)
const AppAuthRoute = AppAuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => AppRoute,
} as any)
const AppSettingsLayoutRoute = AppSettingsLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => AppSettingsRoute,
} as any)
const AppMainLayoutRoute = AppMainLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => AppMainRoute,
} as any)
const AppSettingsLayoutIndexRoute = AppSettingsLayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppSettingsLayoutRoute,
} as any)
const AppMainLayoutIndexRoute = AppMainLayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppMainLayoutRoute,
} as any)

export interface FileRoutesByFullPath {
  '/app': typeof AppRouteWithChildren
  '/app/auth': typeof AppAuthRoute
  '/app/chat': typeof AppChatRoute
  '/app/main': typeof AppMainLayoutRouteWithChildren
  '/app/settings': typeof AppSettingsLayoutRouteWithChildren
  '/app/main/': typeof AppMainLayoutIndexRoute
  '/app/settings/': typeof AppSettingsLayoutIndexRoute
}
export interface FileRoutesByTo {
  '/app': typeof AppRouteWithChildren
  '/app/auth': typeof AppAuthRoute
  '/app/chat': typeof AppChatRoute
  '/app/main': typeof AppMainLayoutIndexRoute
  '/app/settings': typeof AppSettingsLayoutIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/app': typeof AppRouteWithChildren
  '/app/auth': typeof AppAuthRoute
  '/app/chat': typeof AppChatRoute
  '/app/main': typeof AppMainRouteWithChildren
  '/app/main/_layout': typeof AppMainLayoutRouteWithChildren
  '/app/settings': typeof AppSettingsRouteWithChildren
  '/app/settings/_layout': typeof AppSettingsLayoutRouteWithChildren
  '/app/main/_layout/': typeof AppMainLayoutIndexRoute
  '/app/settings/_layout/': typeof AppSettingsLayoutIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/app'
    | '/app/auth'
    | '/app/chat'
    | '/app/main'
    | '/app/settings'
    | '/app/main/'
    | '/app/settings/'
  fileRoutesByTo: FileRoutesByTo
  to: '/app' | '/app/auth' | '/app/chat' | '/app/main' | '/app/settings'
  id:
    | '__root__'
    | '/app'
    | '/app/auth'
    | '/app/chat'
    | '/app/main'
    | '/app/main/_layout'
    | '/app/settings'
    | '/app/settings/_layout'
    | '/app/main/_layout/'
    | '/app/settings/_layout/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AppRoute: typeof AppRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/settings': {
      id: '/app/settings'
      path: '/settings'
      fullPath: '/app/settings'
      preLoaderRoute: typeof AppSettingsRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/main': {
      id: '/app/main'
      path: '/main'
      fullPath: '/app/main'
      preLoaderRoute: typeof AppMainRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/chat': {
      id: '/app/chat'
      path: '/chat'
      fullPath: '/app/chat'
      preLoaderRoute: typeof AppChatRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/auth': {
      id: '/app/auth'
      path: '/auth'
      fullPath: '/app/auth'
      preLoaderRoute: typeof AppAuthRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/settings/_layout': {
      id: '/app/settings/_layout'
      path: '/settings'
      fullPath: '/app/settings'
      preLoaderRoute: typeof AppSettingsLayoutRouteImport
      parentRoute: typeof AppSettingsRoute
    }
    '/app/main/_layout': {
      id: '/app/main/_layout'
      path: '/main'
      fullPath: '/app/main'
      preLoaderRoute: typeof AppMainLayoutRouteImport
      parentRoute: typeof AppMainRoute
    }
    '/app/settings/_layout/': {
      id: '/app/settings/_layout/'
      path: '/'
      fullPath: '/app/settings/'
      preLoaderRoute: typeof AppSettingsLayoutIndexRouteImport
      parentRoute: typeof AppSettingsLayoutRoute
    }
    '/app/main/_layout/': {
      id: '/app/main/_layout/'
      path: '/'
      fullPath: '/app/main/'
      preLoaderRoute: typeof AppMainLayoutIndexRouteImport
      parentRoute: typeof AppMainLayoutRoute
    }
  }
}

interface AppMainLayoutRouteChildren {
  AppMainLayoutIndexRoute: typeof AppMainLayoutIndexRoute
}

const AppMainLayoutRouteChildren: AppMainLayoutRouteChildren = {
  AppMainLayoutIndexRoute: AppMainLayoutIndexRoute,
}

const AppMainLayoutRouteWithChildren = AppMainLayoutRoute._addFileChildren(
  AppMainLayoutRouteChildren,
)

interface AppMainRouteChildren {
  AppMainLayoutRoute: typeof AppMainLayoutRouteWithChildren
}

const AppMainRouteChildren: AppMainRouteChildren = {
  AppMainLayoutRoute: AppMainLayoutRouteWithChildren,
}

const AppMainRouteWithChildren =
  AppMainRoute._addFileChildren(AppMainRouteChildren)

interface AppSettingsLayoutRouteChildren {
  AppSettingsLayoutIndexRoute: typeof AppSettingsLayoutIndexRoute
}

const AppSettingsLayoutRouteChildren: AppSettingsLayoutRouteChildren = {
  AppSettingsLayoutIndexRoute: AppSettingsLayoutIndexRoute,
}

const AppSettingsLayoutRouteWithChildren =
  AppSettingsLayoutRoute._addFileChildren(AppSettingsLayoutRouteChildren)

interface AppSettingsRouteChildren {
  AppSettingsLayoutRoute: typeof AppSettingsLayoutRouteWithChildren
}

const AppSettingsRouteChildren: AppSettingsRouteChildren = {
  AppSettingsLayoutRoute: AppSettingsLayoutRouteWithChildren,
}

const AppSettingsRouteWithChildren = AppSettingsRoute._addFileChildren(
  AppSettingsRouteChildren,
)

interface AppRouteChildren {
  AppAuthRoute: typeof AppAuthRoute
  AppChatRoute: typeof AppChatRoute
  AppMainRoute: typeof AppMainRouteWithChildren
  AppSettingsRoute: typeof AppSettingsRouteWithChildren
}

const AppRouteChildren: AppRouteChildren = {
  AppAuthRoute: AppAuthRoute,
  AppChatRoute: AppChatRoute,
  AppMainRoute: AppMainRouteWithChildren,
  AppSettingsRoute: AppSettingsRouteWithChildren,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AppRoute: AppRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
