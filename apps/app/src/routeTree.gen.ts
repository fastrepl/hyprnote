/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IntegrationImport } from './routes/integration'
import { Route as IndexImport } from './routes/index'
import { Route as SIdImport } from './routes/s.$id'
import { Route as AuthSignUpImport } from './routes/auth.sign-up'
import { Route as AuthSignOutImport } from './routes/auth.sign-out'
import { Route as AuthSignInImport } from './routes/auth.sign-in'
import { Route as AuthConnectImport } from './routes/auth.connect'

// Create/Update Routes

const IntegrationRoute = IntegrationImport.update({
  id: '/integration',
  path: '/integration',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SIdRoute = SIdImport.update({
  id: '/s/$id',
  path: '/s/$id',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignUpRoute = AuthSignUpImport.update({
  id: '/auth/sign-up',
  path: '/auth/sign-up',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignOutRoute = AuthSignOutImport.update({
  id: '/auth/sign-out',
  path: '/auth/sign-out',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignInRoute = AuthSignInImport.update({
  id: '/auth/sign-in',
  path: '/auth/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const AuthConnectRoute = AuthConnectImport.update({
  id: '/auth/connect',
  path: '/auth/connect',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/integration': {
      id: '/integration'
      path: '/integration'
      fullPath: '/integration'
      preLoaderRoute: typeof IntegrationImport
      parentRoute: typeof rootRoute
    }
    '/auth/connect': {
      id: '/auth/connect'
      path: '/auth/connect'
      fullPath: '/auth/connect'
      preLoaderRoute: typeof AuthConnectImport
      parentRoute: typeof rootRoute
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/auth/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInImport
      parentRoute: typeof rootRoute
    }
    '/auth/sign-out': {
      id: '/auth/sign-out'
      path: '/auth/sign-out'
      fullPath: '/auth/sign-out'
      preLoaderRoute: typeof AuthSignOutImport
      parentRoute: typeof rootRoute
    }
    '/auth/sign-up': {
      id: '/auth/sign-up'
      path: '/auth/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpImport
      parentRoute: typeof rootRoute
    }
    '/s/$id': {
      id: '/s/$id'
      path: '/s/$id'
      fullPath: '/s/$id'
      preLoaderRoute: typeof SIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/integration': typeof IntegrationRoute
  '/auth/connect': typeof AuthConnectRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-out': typeof AuthSignOutRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/s/$id': typeof SIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/integration': typeof IntegrationRoute
  '/auth/connect': typeof AuthConnectRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-out': typeof AuthSignOutRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/s/$id': typeof SIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/integration': typeof IntegrationRoute
  '/auth/connect': typeof AuthConnectRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-out': typeof AuthSignOutRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/s/$id': typeof SIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/integration'
    | '/auth/connect'
    | '/auth/sign-in'
    | '/auth/sign-out'
    | '/auth/sign-up'
    | '/s/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/integration'
    | '/auth/connect'
    | '/auth/sign-in'
    | '/auth/sign-out'
    | '/auth/sign-up'
    | '/s/$id'
  id:
    | '__root__'
    | '/'
    | '/integration'
    | '/auth/connect'
    | '/auth/sign-in'
    | '/auth/sign-out'
    | '/auth/sign-up'
    | '/s/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  IntegrationRoute: typeof IntegrationRoute
  AuthConnectRoute: typeof AuthConnectRoute
  AuthSignInRoute: typeof AuthSignInRoute
  AuthSignOutRoute: typeof AuthSignOutRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
  SIdRoute: typeof SIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  IntegrationRoute: IntegrationRoute,
  AuthConnectRoute: AuthConnectRoute,
  AuthSignInRoute: AuthSignInRoute,
  AuthSignOutRoute: AuthSignOutRoute,
  AuthSignUpRoute: AuthSignUpRoute,
  SIdRoute: SIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/integration",
        "/auth/connect",
        "/auth/sign-in",
        "/auth/sign-out",
        "/auth/sign-up",
        "/s/$id"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/integration": {
      "filePath": "integration.tsx"
    },
    "/auth/connect": {
      "filePath": "auth.connect.tsx"
    },
    "/auth/sign-in": {
      "filePath": "auth.sign-in.tsx"
    },
    "/auth/sign-out": {
      "filePath": "auth.sign-out.tsx"
    },
    "/auth/sign-up": {
      "filePath": "auth.sign-up.tsx"
    },
    "/s/$id": {
      "filePath": "s.$id.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
