on:
  workflow_dispatch:
  release:
    types:
      - published
      - prereleased

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CN_APPLICATION: "fastrepl/owhisper"

jobs:
  cli_draft:
    if: ${{ github.event_name == 'workflow_dispatch' || (github.event_name == 'release' && startsWith(github.event.release.tag_name, 'owhisper_v')) }}
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - id: get_version
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            VERSION="${{ github.event.release.tag_name }}"
            VERSION="${VERSION#owhisper_v}"
          else
            VERSION=$(grep '^version' ./owhisper/owhisper-server/Cargo.toml | head -1 | cut -d'"' -f2)
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      - uses: ./.github/actions/cn_release
        with:
          cmd: draft
          app: ${{ env.CN_APPLICATION }}
          key: ${{ secrets.CN_API_KEY }}
          version: ${{ steps.get_version.outputs.version }}
          working-directory: ./owhisper/owhisper-server

  cli_build:
    needs: cli_draft
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos"
            target: "aarch64-apple-darwin"
            runner: "macos-14"
          - platform: "macos"
            target: "x86_64-apple-darwin"
            runner: "macos-14"
          - platform: "linux"
            target: "x86_64-unknown-linux-gnu"
            runner: "ubuntu-latest"
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/rust_install
        with:
          platform: ${{ matrix.platform }}
      - run: cargo build --release --bin owhisper-server --target ${{ matrix.target }}

      - id: prepare_artifacts
        shell: bash
        run: |
          mkdir -p artifacts
          find target/${{ matrix.target }}/release -name 'owhisper-server*' ! -name '*.d' -type f -exec cp {} artifacts/ \;
          cd artifacts
          for file in owhisper-server*; do
            if [ -f "$file" ]; then
              mv "$file" "${file%%.*}-${{ matrix.target }}${file#owhisper-server}"
            fi
          done

      - uses: actions/upload-artifact@v4
        with:
          name: owhisper-server-${{ matrix.target }}
          path: artifacts/*
          retention-days: 7

      - id: get_version
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            VERSION="${{ github.event.release.tag_name }}"
            VERSION="${VERSION#owhisper_v}"
          else
            VERSION=$(grep '^version' ./owhisper/owhisper-server/Cargo.toml | head -1 | cut -d'"' -f2)
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - if: ${{ github.event_name == 'workflow_dispatch' || (github.event_name == 'release' && startsWith(github.event.release.tag_name, 'owhisper_v')) }}
        uses: ./.github/actions/cn_release
        with:
          raw: >-
            release upload "${{ env.CN_APPLICATION }}" "${{ steps.get_version.outputs.version }}"
            --public-platform ${{ matrix.target == 'aarch64-apple-darwin' && 'macos-aarch64' || matrix.target == 'x86_64-apple-darwin' && 'macos-x86_64' || 'linux-x86_64' }}
            --file artifacts/owhisper-server-${{ matrix.target }}
          key: ${{ secrets.CN_API_KEY }}

  publish:
    if: ${{ github.event_name == 'workflow_dispatch' || (github.event_name == 'release' && startsWith(github.event.release.tag_name, 'owhisper_v')) }}
    needs: cli_build
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - id: get_version
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            VERSION="${{ github.event.release.tag_name }}"
            VERSION="${VERSION#owhisper_v}"
          else
            VERSION=$(grep '^version' ./owhisper/owhisper-server/Cargo.toml | head -1 | cut -d'"' -f2)
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      - uses: ./.github/actions/cn_release
        with:
          cmd: publish
          app: ${{ env.CN_APPLICATION }}
          key: ${{ secrets.CN_API_KEY }}
          version: ${{ steps.get_version.outputs.version }}
          working-directory: ./owhisper/owhisper-server

  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/owhisper
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=ref,event=tag
            type=semver,pattern={{version}},prefix=owhisper_v
            type=semver,pattern={{major}}.{{minor}},prefix=owhisper_v
            type=semver,pattern={{major}},prefix=owhisper_v
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=latest,enable=${{ github.event_name == 'release' }}

      - uses: Warpbuilds/build-push-action@v6
        env:
          DOCKER_BUILD_RECORD_UPLOAD: false
          DOCKER_BUILD_SUMMARY: false
          DOCKER_BUILD_CHECKS_ANNOTATIONS: false
        with:
          context: .
          file: ./owhisper/owhisper-server/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          profile-name: "hyprnote-owhisper-builder"
          api-key: ${{ secrets.WARPBUILD_API_KEY }}
