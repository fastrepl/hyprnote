inputs:
  target:
    required: false
    type: string

runs:
  using: "composite"
  steps:
    - run: rustup toolchain install 1.83.0 --profile minimal --no-self-update
      shell: bash

    # cache cargo registry and git repositories separately for faster restoration
    - uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry/index
          ~/.cargo/registry/cache
          ~/.cargo/git/db
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-registry-
    - if: inputs.target == 'macos'
      run: rustup target add aarch64-apple-darwin x86_64-apple-darwin
      shell: bash
    - if: inputs.target == 'ios'
      run: rustup target add aarch64-apple-ios x86_64-apple-ios aarch64-apple-ios-sim
      shell: bash
    - if: inputs.target == 'android'
      run: rustup target add aarch64-linux-android armv7-linux-androideabi i686-linux-android x86_64-linux-android
      shell: bash
    - if: inputs.target == 'windows'
      run: rustup target add x86_64-pc-windows-msvc
      shell: bash
    # Cache the target directory for faster compilation
    - name: Cache Cargo target directory
      uses: actions/cache@v4
      with:
        path: |
          target/
          apps/desktop/src-tauri/target/
        key: ${{ runner.os }}-cargo-target-${{ inputs.target }}-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-target-${{ inputs.target }}-

    - uses: Swatinem/rust-cache@v2
      with:
        # Improve caching by specifying workspaces and other options
        workspaces: |
          apps/desktop/src-tauri
          crates
        shared-key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        cache-on-failure: true
