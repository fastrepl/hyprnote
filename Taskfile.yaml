version: "3"
dotenv: [".env.local"]
tasks:
  fmt:js: pnpm -r format
  fmt:swift: find crates -type f \( -name "*.swift" \) -not -path "*/\.build/*" | xargs swift-format format -i
  fmt:dprint: dprint fmt
  fmt:
    silent: true
    deps: ["fmt:swift", "fmt:js", "fmt:dprint"]

  app:dev:
    cmds:
      - docker-compose -f crates/s3/docker-compose.yaml up -d
      - cmd: cargo watch -x 'run -p app' -i **/types/**
        ignore_error: true
      - docker-compose -f crates/s3/docker-compose.yaml down
  app:env:
    cmds:
      - |
          secrets=$(grep -v '^#' .env.prod | grep '=' | sed 's/"/\\"/g' | tr '\n' ' ')
          fly secrets set $secrets -a hypr-server

  scripts:init: POETRY_VIRTUALENVS_IN_PROJECT=true poetry install --no-cache --no-interaction --all-extras
  scripts:run: poetry run python3 {{.CLI_ARGS}}

  stripe: stripe listen --skip-verify --forward-to http://localhost:5000/webhook/stripe
  lago:
    env:
      LAGO_RSA_PRIVATE_KEY:
        sh: openssl genrsa 2048 | base64
    cmds:
      - docker compose -f lago/docker-compose.yml up -d api
      - docker compose -f lago/docker-compose.yml exec api rails db:create
      - sleep 3
      - docker compose -f lago/docker-compose.yml exec api rails db:migrate
      - sleep 3
      - docker compose -f lago/docker-compose.yml up -d front
