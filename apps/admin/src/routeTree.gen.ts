/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignUpRouteImport } from './routes/sign-up'
import { Route as SignInRouteImport } from './routes/sign-in'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AppIndexRouteImport } from './routes/app.index'
import { Route as AppMembersRouteImport } from './routes/app.members'
import { ServerRoute as ChatCompletionServerRouteImport } from './routes/chat.completion'
import { ServerRoute as ApiAuthSplatServerRouteImport } from './routes/api.auth.$'

const rootServerRouteImport = createServerRootRoute()

const SignUpRoute = SignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const SignInRoute = SignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppIndexRoute = AppIndexRouteImport.update({
  id: '/app/',
  path: '/app/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppMembersRoute = AppMembersRouteImport.update({
  id: '/app/members',
  path: '/app/members',
  getParentRoute: () => rootRouteImport,
} as any)
const ChatCompletionServerRoute = ChatCompletionServerRouteImport.update({
  id: '/chat/completion',
  path: '/chat/completion',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAuthSplatServerRoute = ApiAuthSplatServerRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/app/members': typeof AppMembersRoute
  '/app': typeof AppIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/app/members': typeof AppMembersRoute
  '/app': typeof AppIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/app/members': typeof AppMembersRoute
  '/app/': typeof AppIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/sign-in' | '/sign-up' | '/app/members' | '/app'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/sign-in' | '/sign-up' | '/app/members' | '/app'
  id: '__root__' | '/' | '/sign-in' | '/sign-up' | '/app/members' | '/app/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SignInRoute: typeof SignInRoute
  SignUpRoute: typeof SignUpRoute
  AppMembersRoute: typeof AppMembersRoute
  AppIndexRoute: typeof AppIndexRoute
}
export interface FileServerRoutesByFullPath {
  '/chat/completion': typeof ChatCompletionServerRoute
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesByTo {
  '/chat/completion': typeof ChatCompletionServerRoute
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/chat/completion': typeof ChatCompletionServerRoute
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/chat/completion' | '/api/auth/$'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/chat/completion' | '/api/auth/$'
  id: '__root__' | '/chat/completion' | '/api/auth/$'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ChatCompletionServerRoute: typeof ChatCompletionServerRoute
  ApiAuthSplatServerRoute: typeof ApiAuthSplatServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/': {
      id: '/app/'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/members': {
      id: '/app/members'
      path: '/app/members'
      fullPath: '/app/members'
      preLoaderRoute: typeof AppMembersRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/chat/completion': {
      id: '/chat/completion'
      path: '/chat/completion'
      fullPath: '/chat/completion'
      preLoaderRoute: typeof ChatCompletionServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SignInRoute: SignInRoute,
  SignUpRoute: SignUpRoute,
  AppMembersRoute: AppMembersRoute,
  AppIndexRoute: AppIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ChatCompletionServerRoute: ChatCompletionServerRoute,
  ApiAuthSplatServerRoute: ApiAuthSplatServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
