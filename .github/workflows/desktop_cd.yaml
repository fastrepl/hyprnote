# https://docs.crabnebula.dev/cloud/ci/tauri-v2-workflow/
on:
  workflow_dispatch:
  release:
    types:
      - published

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true
env:
  CN_APPLICATION: "fastrepl/hyprnote"
  RELEASE_CHANNEL: ${{ (github.event_name == 'release' && github.event.release.tag_name != '') && 'nightly' || (github.event_name == 'workflow_dispatch' && startsWith(github.ref, 'refs/tags/')) && 'stable' || 'staging' }}
  TAURI_CONF_PATH: ${{ (github.event_name == 'release' && github.event.release.tag_name != '') && './src-tauri/tauri.conf.nightly.json' || (github.event_name == 'workflow_dispatch' && startsWith(github.ref, 'refs/tags/')) && './src-tauri/tauri.conf.stable.json' || './src-tauri/tauri.conf.staging.json' }}
  NODE_OPTIONS: "--max-old-space-size=4096"

jobs:
  build:
    if: ${{ github.event_name == 'workflow_dispatch' || (github.event_name == 'release' && startsWith(github.event.release.tag_name, 'desktop_')) }}
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos"
            target: "aarch64-apple-darwin"
            runner: "macos-14"
          - platform: "macos"
            target: "x86_64-apple-darwin"
            runner: "macos-14"
          - platform: "windows"
            target: "x86_64-pc-windows-msvc"
            runner: "windows-latest"
    runs-on: ${{ matrix.runner }}
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
      - if: ${{ env.RELEASE_CHANNEL != 'staging' }}
        run: |
          VERSION=$(jq -r '.version' ./apps/desktop/src-tauri/tauri.conf.json)

          if [[ "${{ github.event_name }}" == "release" ]]; then
            TAG_NAME="${{ github.event.release.tag_name }}"
            echo "Version: $VERSION, Tag name: $TAG_NAME"
            if [[ ! "$TAG_NAME" == *"$VERSION"* ]]; then
              exit 1
            fi
          fi
        shell: bash
      - if: ${{ env.RELEASE_CHANNEL != 'staging' }}
        uses: ./.github/actions/cn_release
        with:
          cmd: draft
          app: ${{ env.CN_APPLICATION }}
          key: ${{ secrets.CN_API_KEY }}
          channel: ${{ env.RELEASE_CHANNEL }}
          framework: tauri
          working-directory: ./apps/desktop
      - uses: ./.github/actions/setup_protoc
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: ./.github/actions/install_desktop_deps
        with:
          target: ${{ matrix.platform }}
      - uses: ./.github/actions/rust_install
        with:
          platform: ${{ matrix.platform }}
      - uses: ./.github/actions/pnpm_install
      - uses: ./.github/actions/poetry_install
      - run: poetry run python scripts/pre_build.py
      - run: pnpm -F desktop lingui:compile
      - run: pnpm -F ui build
      - uses: ./.github/actions/apple_cert
        id: apple-cert
        if: ${{ matrix.platform == 'macos' }}
        with:
          apple-certificate: ${{ secrets.APPLE_CERTIFICATE }}
          apple-certificate-password: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          keychain-password: ${{ secrets.KEYCHAIN_PASSWORD }}
      - run: |
          aws s3 cp s3://hyprnote-private/hyprnote-${{ env.RELEASE_CHANNEL }}.provisionprofile apps/desktop/src-tauri/assets/hyprnote-${{ env.RELEASE_CHANNEL }}.provisionprofile \
            --endpoint-url ${{ secrets.CLOUDFLARE_R2_ENDPOINT_URL }} \
            --region auto
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.CLOUDFLARE_R2_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.CLOUDFLARE_R2_SECRET_ACCESS_KEY }}
      - if: ${{ matrix.target == 'aarch64-apple-darwin' }}
        run: |
          aws s3 cp s3://hyprnote-cache2/v0/binaries/stt apps/desktop/src-tauri/binaries/stt-${{ matrix.target }} \
            --endpoint-url ${{ secrets.CLOUDFLARE_R2_ENDPOINT_URL }} \
            --region auto
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.CLOUDFLARE_R2_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.CLOUDFLARE_R2_SECRET_ACCESS_KEY }}
      - if: ${{ matrix.target == 'aarch64-apple-darwin' }}
        run: |
          chmod +x ./apps/desktop/src-tauri/binaries/stt-${{ matrix.target }}
          ./scripts/sidecar.sh "./apps/desktop/${{ env.TAURI_CONF_PATH }}" "binaries/stt"
      - run: pnpm -F desktop tauri build --target ${{ matrix.target }} --config ${{ env.TAURI_CONF_PATH }} --verbose
        env:
          # https://github.com/tauri-apps/tauri-action/issues/740
          CI: false
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AM_API_KEY: ${{ secrets.AM_API_KEY }}
          POSTHOG_API_KEY: ${{ secrets.POSTHOG_API_KEY }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          KEYGEN_ACCOUNT_ID: ${{ secrets.KEYGEN_ACCOUNT_ID }}
          KEYGEN_VERIFY_KEY: ${{ secrets.KEYGEN_VERIFY_KEY }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          APPLE_SIGNING_IDENTITY: ${{ env.CERT_ID }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
      - run: |
          mkdir -p target/release/
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            find target/${{ matrix.target }}/release -type f ! -name ".*" -exec cp {} target/release/ \;
          else
            find target/${{ matrix.target }}/release -type f -not -path "*/\.*" -exec cp {} target/release/ \;
          fi
        shell: bash
        working-directory: ./apps/desktop/src-tauri
      - if: ${{ env.RELEASE_CHANNEL != 'staging' }}
        uses: ./.github/actions/cn_release
        with:
          cmd: upload
          app: ${{ env.CN_APPLICATION }}
          key: ${{ secrets.CN_API_KEY }}
          channel: ${{ env.RELEASE_CHANNEL }}
          framework: tauri
          working-directory: ./apps/desktop
      - if: ${{ env.RELEASE_CHANNEL == 'staging' }}
        run: |
          cd apps/desktop/src-tauri/target/${{ matrix.target }}/release
          tar -czf hyprnote-staging-${{ matrix.target }}.tar.gz bundle/
        shell: bash
      - if: ${{ env.RELEASE_CHANNEL == 'staging' }}
        uses: actions/upload-artifact@v4
        with:
          name: hyprnote-staging-${{ matrix.target }}
          path: apps/desktop/src-tauri/target/${{ matrix.target }}/release/hyprnote-staging-${{ matrix.target }}.tar.gz
          retention-days: 3
  publish:
    if: ${{ ((github.event_name == 'workflow_dispatch' && startsWith(github.ref, 'refs/tags/')) || (github.event_name == 'release' && startsWith(github.event.release.tag_name, 'desktop_'))) }}
    needs: build
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/cn_release
        with:
          cmd: publish
          app: ${{ env.CN_APPLICATION }}
          key: ${{ secrets.CN_API_KEY }}
          channel: ${{ env.RELEASE_CHANNEL }}
          framework: tauri
          working-directory: ./apps/desktop
